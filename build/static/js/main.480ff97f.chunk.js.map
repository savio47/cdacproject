{"version":3,"sources":["requests.js","axios.js","Banner.js","Nav.js","Row.js","screens/HomeScreen.js","firebase.js","screens/SignupScreen.js","screens/LoginScreen.js","features/counter/userSlice.js","screens/PlansScreen3.js","screens/ProfileScreen.js","screens/Reviews.js","screens/Contacts.js","screens/Helps.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["API_KEY","requests","fetchTrendingNow","fetchNetflixOriginals","fetchTopRated","fetchUpcoming","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchPopular","instance","axios","create","baseURL","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","table","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","addEventListener","removeEventListener","onClick","push","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","HomeScreen","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","SignupScreen","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlansScreen3","products","setProducts","loading","setLoading","useSelector","collection","ref_plans","onSnapshot","querySnapshot","items","forEach","doc","limit","product","price","description","newPlan","plan","uuidv4","productid","uid","userEmail","email","set","err","ProfileScreen","plans","setPlans","signOut","Reviews","reviews","setReviews","desc","setDesc","orderBy","onChange","target","rows","cols","owner","ownerEmail","newReview","addReview","review","color","delete","deleteReview","updatedReview","update","editReview","Contacts","setMessage","cname","setCname","newContact","addContact","Helps","App","dispatch","useDispatch","onAuthStateChanged","userAuth","path","exact","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.480ff97f.chunk.js","sourcesContent":["const API_KEY = \"9d51967612a919f190a3283ab484490a\";\r\n\r\nconst requests = {\r\n    fetchTrendingNow: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`,\r\n    fetchUpcoming: `/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchPopular: `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`,\r\n    \r\n};\r\n\r\nexport default requests;\r\n\r\n\r\n//","import axios from \"axios\";\r\n\r\n/** base url to make requets to the movie database */\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, {useState, useEffect} from 'react';\r\nimport \"./Banner.css\";\r\nimport axios from './axios';\r\nimport requests from './requests';\r\n\r\nfunction Banner() {\r\n    const[movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length -1)\r\n            ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.table(movie);\r\n\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n    \r\n    return (\r\n    <header className = \"banner\" \r\n        style = {{\r\n            backgroundSize : \"cover\",\r\n            backgroundImage : `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\"\r\n        }}>\r\n            <div className=\"banner_contents\">\r\n            {/* title */}\r\n            <h1 className=\"banner_title\">\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n\r\n            {/* div > 2 buttons play and mylist*/}\r\n            <div className=\"banner_buttons\">\r\n                <button className=\"banner_button\">Play</button>\r\n                <button className=\"banner_button\">My List</button>\r\n            </div>\r\n             \r\n            {/* description */}\r\n            <h1 className=\"banner_description\">\r\n            {truncate(movie?.overview,150)} </h1> \r\n        </div>\r\n        <div className=\"banner_fadeBottom\"></div>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Banner ;","import React, {useState, useEffect } from 'react';\r\nimport {useHistory } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n        const [show, handleShow] = useState(false);\r\n        const history =useHistory();\r\n    \r\n        const transitionNavBar = () => {\r\n        if (window.scrollY > 100) {\r\n            handleShow(true);\r\n          } else handleShow(false);\r\n        };\r\n    \r\n\r\n      useEffect(() => {\r\n        window.addEventListener(\"scroll\", transitionNavBar);\r\n        return() =>  window.removeEventListener(\"scroll\", transitionNavBar);\r\n      }, []);\r\n         \r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n           <div className=\"nav_contents\">\r\n           <img \r\n           onClick={() => history.push(\"/\")}\r\n           className=\"nav_logo\"\r\n            src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \r\n            alt=\"VS Logo\"  />\r\n\r\n            <label  onClick={() => history.push(\"/review\")}> Reviews  </label>\r\n            <h4  onClick={() => history.push(\"/contact\")}> Contact Us  </h4>\r\n            <h3  className=\"help\" onClick={() => history.push(\"/help\")}> Help </h3>\r\n            \r\n            <img \r\n            onClick={() => history.push(\"/profile\")}\r\n            className=\"nav_avatar\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" \r\n            alt=\"Profile\"   />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow = false}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    /** state i like a memory to store something.\r\n     * when we refresh it disappears.\r\n     * it is basically way to write variables in react\r\n     */\r\n\r\n    \r\n    // A snippet of code which runs based on a specific condition\r\n    useEffect(()=>{\r\n        // if [] , run once when row laods, and dont run again\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n    // we are using a variables which is being passed outside \r\n    // of the block so we will have to tell useeffect will know\r\n    // so useeffecgt know that something changed so it will have to refile the code \r\n \r\n    console.table(movies);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    /**useEffect(()=>{\r\n        // if [movies] , run when row laods, and run everytime when movies changes\r\n    },[movies]);\r\n    */\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                \r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n            { /* several row posters*/}\r\n\r\n            {movies.map(movie => (\r\n                ((isLargeRow && movie.poster_path) ||\r\n                (!isLargeRow && movie.backdrop_path)) && (\r\n                <img \r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} // String concatination\r\n                src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                alt={movie.name} />\r\n            ))\r\n\r\n            )}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React from 'react';\r\nimport \"./HomeScreen.css\";\r\nimport requests from '../requests';\r\nimport Banner from '../Banner';\r\nimport Nav from '../Nav';\r\nimport Row from '../Row';\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n    <div className = \"homeScreen\">\r\n    {/*Nav-Bar */}\r\n      <Nav />\r\n \r\n    {/* Banner */}\r\n      <Banner />\r\n     \r\n     {/* Different Rows*/}\r\n     <Row \r\n        title=\"NETFLIX ORIGINALS\" \r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow = {true} // By default is it true so we can remove ={true}\r\n      />\r\n      \r\n      <Row  title=\"Trending Now\"  fetchUrl={requests.fetchTrendingNow}  />\r\n      <Row  title=\"Top Rated\"  fetchUrl={requests.fetchTopRated}  />\r\n      <Row  title=\"Popular Movies\"   fetchUrl={requests.fetchPopular}  />\r\n      <Row  title=\"Upcoming Movies\"   fetchUrl={requests.fetchUpcoming}  />\r\n      <Row  title=\"Action Movies\"   fetchUrl={requests.fetchActionMovies}  />\r\n      <Row  title=\"Comedy Movies\"   fetchUrl={requests.fetchComedyMovies}  />\r\n      <Row  title=\"Horror Movies\"   fetchUrl={requests.fetchHorrorMovies}  />\r\n      <Row  title=\"Romance Movies\"   fetchUrl={requests.fetchRomanceMovies}  />\r\n      {/* <Row  title=\"Documentaries\"   fetchUrl={requests.fetchDocumentaries}  /> */}\r\n\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomeScreen ;\r\n//require(HomeScreen).default; \r\n","import firebase from 'firebase';\r\nimport \"firebase/auth\";\r\n//import { db } from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAZ2y7_9bBKEMZW2gYkg-R5HM6VZY-ElOk\",\r\n  authDomain: \"final-project-c1dac.firebaseapp.com\",\r\n  projectId: \"final-project-c1dac\",\r\n  storageBucket: \"final-project-c1dac.appspot.com\",\r\n  messagingSenderId: \"1069810894175\",\r\n  appId: \"1:1069810894175:web:d4fcf9a391801e82e322ea\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport {auth}\r\nexport default db;","import React,{ useRef } from 'react'\r\nimport  {auth} from \"../firebase\";\r\nimport \"./SignupScreen.css\";\r\n//import db from \"../firebase\";\r\n\r\nfunction SignupScreen() {\r\n    const emailRef = useRef(null);\r\n    const passwordRef= useRef(null);\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.createUserWithEmailAndPassword(\r\n            emailRef.current.value,\r\n            passwordRef.current.value,\r\n            //   db.collection('users').doc(user.uid).set({\r\n            //      plan: null,\r\n            //  }),\r\n        ).then((authUser) =>{  \r\n            console.log(authUser);\r\n            //db.collection('users').add();\r\n        })\r\n        .catch((error) => {\r\n            alert(error.message);\r\n        });\r\n    };\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(\r\n            emailRef.current.value,\r\n            passwordRef.current.value,\r\n        ).then((authUser) =>{  \r\n            console.log(authUser);\r\n        })\r\n        .catch((error) => {\r\n            alert(error.message);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"signupScreen\">\r\n            <form id=\"signup-form\">\r\n                <h1>Sign In</h1>\r\n                    <input ref={emailRef} type=\"email\" placeholder=\"Email Address\"/>\r\n                    <input ref={passwordRef} type=\"password\" placeholder=\"Password\"/>\r\n                    <button type=\"submit\" onClick={signIn}>\r\n                         Sign In</button>\r\n                    <h4> \r\n                      <span className=\"signupScreen_gray\">  New to Netflix? </span>\r\n                      <span className=\"signupScreen_link\" onClick={register}> Sign Up now.</span>\r\n                    </h4>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupScreen\r\n","import React ,{ useState } from 'react';\r\nimport \"./LoginScreen.css\";\r\nimport SignupScreen from './SignupScreen';\r\n\r\n\r\nfunction LoginScreen() {\r\nconst[signIn, setSignIn]= useState(false);\r\n\r\n    return (\r\n    <div className = \"loginScreen\">\r\n        <div className = \"loginScreen_background\">\r\n        <img \r\n            className=\"loginScreen_logo\"\r\n            src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \r\n            alt=\"Login \"\r\n            />\r\n            \r\n            <button onClick={() => setSignIn(true)}\r\n            className=\"loginScreen_button\">\r\n                Sign In\r\n            </button>\r\n            <div className = \"loginScreen_gradient\">\r\n            </div>\r\n\r\n            <div className = \"loginScreen_body\">\r\n                {signIn ? (\r\n                    <SignupScreen />\r\n                ):(\r\n                <>\r\n                <h1>Unlimited films, TV programmes and more</h1>\r\n                <h2>Watch anywhere. Cancel anytime</h2>\r\n                <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n               \r\n                <div className = \"loginScreen_input\">\r\n                    <form>\r\n                    <input type=\"email\" placeholder=\"Email Address\"/>\r\n                    <button \r\n                    onClick={() => setSignIn(true)}\r\n                    className=\"loginScreen_getStarted\">GET STARTED</button>\r\n                    </form>\r\n                </div>\r\n\r\n                </>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen ;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n//import { Action } from 'history';\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login:(state, action)=> {\r\n      state.user = action.payload;\r\n    },\r\n    logout:(state)=> {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useState, useEffect} from 'react';\r\nimport './PlansScreen.css';\r\nimport db from \"../firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectUser } from '../features/counter/userSlice';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction PlansScreen3(){\r\n const [products, setProducts] = useState([]);\r\n const [loading, setLoading] = useState(false);\r\n //const [ setPlans] = useState('');\r\n const user = useSelector(selectUser);\r\n //const [title, setTitle] = useState('');    plans,\r\n //const [desc, setDesc] = useState('');  \r\n //const [score, setScore] = useState('');\r\n\r\n const ref = db.collection(\"products\");\r\n const ref_plans = db.collection(\"plans\");\r\n //REALTIME GET FUNCTION\r\n function getProducts() {\r\n   setLoading(true);\r\n   ref\r\n   \r\n    .onSnapshot((querySnapshot) => {\r\n       const items = [];\r\n       querySnapshot.forEach((doc) => {\r\n         items.push(doc.data());\r\n       });\r\n       setProducts(items);\r\n       setLoading(false);\r\n     });\r\n }\r\n\r\n  function getPlans() {\r\n  setLoading(true);\r\n  ref_plans\r\n   .limit(1)\r\n   .onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      //setPlans(items);\r\n      setLoading(false);\r\n    });\r\n} \r\n\r\n useEffect(() => {\r\n    getProducts();\r\n    getPlans();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading){\r\n      return  <h2> Plans Loading ...</h2>\r\n  }\r\n\r\n \r\n\r\n// ADD FUNCTION\r\n \r\nfunction addPlans(newPlan) {\r\n /*  const owner = user ? user.uid : 'unknown';\r\n  const ownerEmail = user ? user.email : 'unknown';\r\n  const newPlan = {\r\n     plan: product.name, \r\n     id: uuidv4(), \r\n     productid:product.id, \r\n    user: user.uid, \r\n    userEmail:user.email\r\n  }; */\r\n \r\n  ref_plans\r\n    .doc(newPlan.id)\r\n    .set(newPlan)\r\n    \r\n    .catch((err) => {\r\n      console.error(err);\r\n      alert(\" You already have a Monthly plan activated\");\r\n    });\r\n}\r\n  \r\n\r\n   return (\r\n    <div className=\"plansScreen\">\r\n        {products.map((product ) => {\r\n            //ToDo Logic to check if the user's subscription is active\r\n            return (\r\n                 <div className=\"plansScreen__plan\">\r\n                    <div className=\"plansScreen__info\">\r\n                        <div key={product.id}>\r\n                        <h5>{product.name} Plan &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rs {product.price}</h5>\r\n                        <h6>{product.description}</h6>\r\n                        </div>\r\n                        </div>\r\n                         <button  onClick={() => addPlans({  plan: product.name, id: uuidv4(), productid:product.id, \r\n                         user: user.uid, userEmail:user.email })}> Subscribe </button> \r\n                        {/* <button   onClick={() => addProduct(product.users.userId)} >Subscribe</button> */}\r\n                    </div> \r\n            );\r\n         })} \r\n         \r\n</div>\r\n);\r\n\r\n}\r\n\r\nexport default PlansScreen3;","import React, { useState, useEffect} from 'react'\r\nimport \"./ProfileScreen.css\"\r\n//import PlansScreen2 from \"./PlansScreen2\"\r\nimport PlansScreen3 from \"./PlansScreen3\"\r\nimport Nav from \"../Nav\";\r\nimport db from \"../firebase\";\r\nimport { selectUser } from '../features/counter/userSlice';\r\nimport { auth } from '../firebase';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ProfileScreen() {\r\n    const user = useSelector(selectUser);\r\n    const [ plans, setPlans] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const ref_plans = db.collection(\"plans\");\r\n    \r\n function getPlans() {\r\n    setLoading(true);\r\n    ref_plans.onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        setPlans(items);\r\n        setLoading(false);\r\n      });\r\n  }\r\n  \r\n   useEffect(() => {\r\n      getPlans();\r\n      // eslint-disable-next-line\r\n    }, []);\r\n    if (loading){\r\n        return  <h2> Plans Loading ...</h2>\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileScreen\">\r\n            <Nav />\r\n        <div className=\"profileScreen_body\">\r\n            <h1>Edit Profile</h1>\r\n            <div className=\"profileScreen_info\">\r\n            <img\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"\"\r\n            />\r\n            <div className=\"profileScreen_details\">\r\n                <h2>{user.email}</h2>\r\n                <br/>\r\n                <h3> Monthly Plans </h3>\r\n                \r\n            <div className=\"profileScreen_plans\">\r\n            {plans.map((plan ) => {\r\n                return (\r\n                <div> \r\n            \r\n            <hr/>\r\n            {plan.user === user.uid ? (\r\n            <div className=\"current_plan\">\r\n                \r\n              <h3> Your Active Plan: &nbsp;&nbsp; {plan.plan} Plan</h3>                  \r\n            </div>\r\n            ) : (\r\n              <div>                  \r\n              </div>\r\n            )}  \r\n                </div>\r\n                );\r\n        })} \r\n               <PlansScreen3 />\r\n                <button \r\n                onClick={() => auth.signOut()} \r\n                className=\"profileScreen_signOut\">\r\n                    Sign Out\r\n                </button>\r\n                \r\n            </div>    \r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React, { useState, useEffect} from 'react';\r\n//import firebase from '../firebase';\r\nimport \"./Reviews.css\"\r\nimport db from \"../firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectUser } from '../features/counter/userSlice';\r\n//import { auth } from './firebase';\r\nimport { useSelector } from \"react-redux\";\r\nimport Nav from '../Nav';\r\n\r\nfunction Reviews() {\r\n  const user = useSelector(selectUser);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const ref = db.collection('reviews');\r\n\r\n  //REALTIME GET FUNCTION\r\n  function getReviews() {\r\n    setLoading(true);\r\n    ref\r\n      .orderBy('owner', 'asc')\r\n      //.limit(3)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        setReviews(items);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getReviews();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // ADD FUNCTION\r\n  function addReview() {\r\n    const owner = user ? user.uid : 'unknown';\r\n    const ownerEmail = user ? user.email : 'unknown';\r\n    const newReview = {\r\n      desc,\r\n      id: uuidv4(),\r\n      owner,\r\n      ownerEmail,\r\n      //createdAt: db.FieldValue.serverTimestamp(),\r\n      //lastUpdate: db.FieldValue.serverTimestamp(),\r\n    };\r\n\r\n    ref\r\n      .doc(newReview.id)\r\n      .set(newReview)\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  //DELETE FUNCTION\r\n  function deleteReview(review) {\r\n    ref\r\n      .doc(review.id)\r\n      .delete()\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert(err);\r\n      });\r\n  }\r\n\r\n  // EDIT FUNCTION\r\n  function editReview(review) {\r\n    const updatedReview = {\r\n        desc : desc,\r\n       //lastUpdate: db.FieldValue.serverTimestamp(),\r\n    };\r\n    setLoading();\r\n    ref\r\n      .doc(review.id)\r\n      .update(updatedReview)\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  //  Only 1 Review per User Allowed\r\n //  Multiple Reviews Allowed\r\n\r\n  return (\r\n    \r\n    <div className=\"reviewDisplay\">\r\n       <Nav />\r\n      <h1>Reviews </h1>\r\n      <div className=\"inputBox\">\r\n        <h3>Add Your Review </h3>\r\n        <h5>&nbsp;&nbsp; Can Add Multiple Reviews </h5>\r\n        <br />\r\n       <h4>Username: &nbsp;&nbsp;&nbsp;{user.email}</h4>\r\n       <br />\r\n        <textarea value={desc} placeholder =\"Enter your review\" onChange={(e) => setDesc(e.target.value)}  rows=\"3\" cols=\"70\"/>\r\n        <br />\r\n        <button className=\"b3\" onClick={() => addReview()}>Submit</button>\r\n      </div>\r\n      {loading ? <h1> Loading...</h1> : null}\r\n      <br/>\r\n      <hr />\r\n      <div className=\"allreviews\" >\r\n      <br/>\r\n      <h3><b>All User Reviews</b></h3>\r\n      <br/>\r\n      {reviews.map((review) => (\r\n        <div className=\"review\" key={review.id}>\r\n          <hr color=\"blue\" />\r\n          <p className=\"username\" ><b> {review.ownerEmail}</b></p>\r\n          <p className=\"description\">{review.desc}</p>\r\n          \r\n         {/* <small>{review.lastUpdate.toDate()}</small>  */}\r\n         \r\n          {review.owner === user.uid ? (\r\n        <div className=\"edit_delete\">\r\n        <button className=\"b1\" onClick={() => deleteReview(review)}>Delete</button>\r\n        <button  className=\"b2\" onClick={() => editReview(review)}>Edit </button>\r\n        <br/>\r\n        \r\n        <br/>\r\n      </div>\r\n      ) : (\r\n        <div>\r\n             <br/>\r\n             \r\n             <br/>\r\n        </div>\r\n      )}\r\n          \r\n        </div>\r\n      ))}\r\n      </div>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { useState} from 'react';\r\nimport \"./Contacts.css\"\r\nimport db from \"../firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { selectUser } from '../features/counter/userSlice';\r\nimport { useSelector } from \"react-redux\";\r\nimport Nav from '../Nav';\r\n\r\nfunction Contacts() {\r\n  const user = useSelector(selectUser);\r\n  const [message, setMessage] = useState('');\r\n  const [cname, setCname] = useState('');\r\n\r\n  const ref = db.collection('contacts');\r\n  \r\n  // ADD FUNCTION\r\n  function addContact() {\r\n    const owner = user ? user.uid : 'unknown';\r\n    const ownerEmail = user ? user.email : 'unknown';\r\n    const newContact = {\r\n      cname,\r\n      message,\r\n      id: uuidv4(),\r\n      owner,\r\n      ownerEmail,\r\n      //createdAt: db.FieldValue.serverTimestamp(),\r\n      //lastUpdate: db.FieldValue.serverTimestamp(),\r\n    };\r\n    \r\n    \r\n    ref\r\n      .doc(newContact.id)\r\n      .set(newContact)\r\n     \r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n      alert(\"Your Feedback is Recorded\")\r\n  }\r\n\r\n //  Multiple Contacts Allowed\r\n\r\n  return (\r\n    \r\n    <div className=\"contactDisplay\">\r\n       <Nav />\r\n       <br />\r\n      <h1>Contact Us  </h1>\r\n      <div className=\"inputBox\">\r\n        <h4>Name: </h4>\r\n        <textarea value={cname} placeholder =\"Enter your name\" onChange={(e) => setCname(e.target.value)} rows=\"1\" cols=\"40\"/>\r\n        <br />\r\n        <br />\r\n       <h4>Email: &nbsp;&nbsp;&nbsp;{user.email}</h4>\r\n       <br />\r\n       <h4>Message:</h4>\r\n        <textarea value={message} placeholder =\"Write Something...\"  onChange={(e) => setMessage(e.target.value)} rows=\"10\" cols=\"70\"/>\r\n        <br />\r\n        <button className=\"b3\" onClick={() => addContact()}>Submit</button>\r\n      </div>\r\n      <br/>\r\n     \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport \"./Helps.css\"\r\nimport Nav from '../Nav';\r\n\r\nfunction Helps() {\r\n  return (\r\n    \r\n    <div className=\"helpDisplay\">\r\n       <Nav />\r\n       <br />\r\n       <br />\r\n       < hr />\r\n      <h1>Frequently Asked Questions </h1>\r\n      <div className=\"inputBox\">\r\n      <br />\r\n      < hr />\r\n        <h2>What is Netflix?</h2>\r\n        <h3>Netflix is a streaming service that offers a wide variety of award-winning TV shows, movies, anime, documentaries and more – on thousands of internet-connected devices.\r\n        <br />You can watch as much as you want, whenever you want, without a single ad – all for one low monthly price. There's always something new to discover, and new TV shows and movies are added every week!\r\n         </h3>\r\n         <br />\r\n          < hr />\r\n          <br />\r\n        <h2>How much does Netflix cost?</h2>\r\n        <h3> Watch Netflix on your smartphone, tablet, Smart TV, laptop, or streaming device, all for one fixed monthly fee . Plans range from ₹&nbsp;499 to ₹&nbsp;799 a month. No extra costs, no contracts.</h3>\r\n        <br />\r\n        < hr />\r\n          <br />\r\n          <h2>Where can I watch? </h2>\r\n        <h3>Watch anywhere, anytime, on an unlimited number of devices. Sign in with your Netflix account to watch instantly on the web at netflix.com from your personal computer or on any internet-connected device that offers  the Netflix app, including smart TVs, smartphones, tablets, streaming media players and game consoles.\r\n       \r\n        <br />\r\n        You can also download your favourite shows with the iOS, Android, or Windows 10 app. \r\n      Use downloads to watch while you're on the go and without an internet connection. Take Netflix with you anywhere.\r\n        </h3>\r\n        <br />\r\n        < hr />\r\n        <br />\r\n\r\n              </div>\r\n      \r\n     \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Helps;\r\n\r\n\r\n\r\n \r\n","import React,{ useEffect  } from 'react';\r\nimport './App.css';\r\nimport HomeScreen from './screens/HomeScreen'; //<Rote exact path=\"/\">   Component\r\nimport {  Switch, Route } from 'react-router-dom';\r\n//import { Switch } from \"react-router\";  //BrowserRouter as Router,\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport {auth} from \"./firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectUser, login, logout} from \"./features/counter/userSlice\";\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport Reviews from './screens/Reviews';\r\nimport Contacts from './screens/Contacts';\r\nimport Helps from './screens/Helps';\r\n\r\nfunction App() {\r\nconst user = useSelector(selectUser);\r\nconst dispatch = useDispatch();\r\n\r\nuseEffect(() => {\r\n  const unsubscribe = auth.onAuthStateChanged(\r\n    (userAuth) => {\r\n    if(userAuth){\r\n      //Logged in\r\n      console.log(userAuth);\r\n      dispatch(\r\n        login({\r\n        uid: userAuth.uid,\r\n        email: userAuth.email,\r\n      })\r\n      );\r\n    }else {\r\n       //logged out\r\n      dispatch(logout());\r\n     }\r\n      \r\n  });\r\n  return unsubscribe;\r\n}, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* <BrowserRouter> */}\r\n      {!user ? (\r\n        <LoginScreen />\r\n      ):(\r\n        <Switch>\r\n          <Route path=\"/profile\" >\r\n            <ProfileScreen />\r\n          </Route>\r\n          <Route exact path=\"/\" > \r\n            <HomeScreen />\r\n          </Route>\r\n          <Route path=\"/review\" >\r\n            <Reviews />\r\n          </Route>\r\n          <Route path=\"/contact\" >\r\n            <Contacts />\r\n          </Route>\r\n           <Route path=\"/help\" >\r\n            <Helps />\r\n          </Route> \r\n          </Switch>\r\n      )\r\n    }\r\n    {/* </BrowserRouter> */}\r\n    </div>\r\n    \r\n  );\r\n}\r\n//component={HomeScreen}\r\nexport default App;\r\n//module.exports = App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/counter/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n//import { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    \r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}